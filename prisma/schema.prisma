// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  defaultShippingAddress Int?
  defaultBillingAddress  Int?
  role                   Role     @default(USER)
  createAt               DateTime @default(now())
  updatedAt              DateTime @updatedAt

  addresses  Address[]  @relation("user")
  cart_items CartItem[] @relation("user")

  @@map("users")
}

model Address {
  id        Int      @id @default(autoincrement())
  lineOne   String
  lineTwo   String
  city      String
  country   String
  pincode   String
  user      User     @relation("user", fields: [userId], references: [id])
  userId    Int
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("addresses")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @db.Text
  price       Decimal
  tags        String
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt

  cart_items CartItem[] @relation("product")

  @@map("products")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  user      User     @relation("user", fields: [userId], references: [id])
  userId    Int
  product   Product  @relation("product", fields: [productId], references: [id])
  productId Int
  quantity  Int
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cart_items")
}
